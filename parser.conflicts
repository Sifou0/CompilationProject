
** Conflict (shift/reduce) in state 60.
** Token involved: CONCATE
** This state is reached from prog after reading:

list(classe) LCBR list(declaration) UMINUS expression

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
list(classe) block EOF 
             LCBR list(declaration) list(instruction) RCBR 
                                    instruction list(instruction) 
                                    expression SEMICOLON 
                                    (?)

** In state 60, looking ahead at CONCATE, shifting is permitted
** because of the following sub-derivation:

UMINUS expression 
       expression . CONCATE expression 

** In state 60, looking ahead at CONCATE, reducing production
** expression -> UMINUS expression
** is permitted because of the following sub-derivation:

expression CONCATE expression // lookahead token appears
UMINUS expression . 

** Conflict (shift/reduce) in state 51.
** Token involved: CONCATE
** This state is reached from prog after reading:

list(classe) LCBR list(declaration) expression MINUS expression

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
list(classe) block EOF 
             LCBR list(declaration) list(instruction) RCBR 
                                    instruction list(instruction) 
                                    expression SEMICOLON 
                                    (?)

** In state 51, looking ahead at CONCATE, reducing production
** expression -> expression MINUS expression
** is permitted because of the following sub-derivation:

expression CONCATE expression // lookahead token appears
expression MINUS expression . 

** In state 51, looking ahead at CONCATE, shifting is permitted
** because of the following sub-derivation:

expression MINUS expression 
                 expression . CONCATE expression 

** Conflict (shift/reduce) in state 49.
** Token involved: CONCATE
** This state is reached from prog after reading:

list(classe) LCBR list(declaration) expression DIV expression

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
list(classe) block EOF 
             LCBR list(declaration) list(instruction) RCBR 
                                    instruction list(instruction) 
                                    expression SEMICOLON 
                                    (?)

** In state 49, looking ahead at CONCATE, reducing production
** expression -> expression DIV expression
** is permitted because of the following sub-derivation:

expression CONCATE expression // lookahead token appears
expression DIV expression . 

** In state 49, looking ahead at CONCATE, shifting is permitted
** because of the following sub-derivation:

expression DIV expression 
               expression . CONCATE expression 

** Conflict (shift/reduce) in state 47.
** Token involved: CONCATE
** This state is reached from prog after reading:

list(classe) LCBR list(declaration) expression PLUS expression

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
list(classe) block EOF 
             LCBR list(declaration) list(instruction) RCBR 
                                    instruction list(instruction) 
                                    expression SEMICOLON 
                                    (?)

** In state 47, looking ahead at CONCATE, reducing production
** expression -> expression PLUS expression
** is permitted because of the following sub-derivation:

expression CONCATE expression // lookahead token appears
expression PLUS expression . 

** In state 47, looking ahead at CONCATE, shifting is permitted
** because of the following sub-derivation:

expression PLUS expression 
                expression . CONCATE expression 

** Conflict (shift/reduce) in state 45.
** Tokens involved: TIMES RELOP PLUS MINUS DIV CONCATE
** The following explanations concentrate on token TIMES.
** This state is reached from prog after reading:

list(classe) LCBR list(declaration) expression CONCATE expression

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
list(classe) block EOF 
             LCBR list(declaration) list(instruction) RCBR 
                                    instruction list(instruction) 
                                    expression SEMICOLON 
                                    (?)

** In state 45, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expression CONCATE expression 
                   expression . TIMES expression 

** In state 45, looking ahead at TIMES, reducing production
** expression -> expression CONCATE expression
** is permitted because of the following sub-derivation:

expression TIMES expression // lookahead token appears
expression CONCATE expression . 

** Conflict (shift/reduce) in state 43.
** Token involved: CONCATE
** This state is reached from prog after reading:

list(classe) LCBR list(declaration) expression RELOP expression

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
list(classe) block EOF 
             LCBR list(declaration) list(instruction) RCBR 
                                    instruction list(instruction) 
                                    expression SEMICOLON 
                                    (?)

** In state 43, looking ahead at CONCATE, shifting is permitted
** because of the following sub-derivation:

expression RELOP expression 
                 expression . CONCATE expression 

** In state 43, looking ahead at CONCATE, reducing production
** expression -> expression RELOP expression
** is permitted because of the following sub-derivation:

expression CONCATE expression // lookahead token appears
expression RELOP expression . 

** Conflict (shift/reduce) in state 41.
** Token involved: CONCATE
** This state is reached from prog after reading:

list(classe) LCBR list(declaration) expression TIMES expression

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
list(classe) block EOF 
             LCBR list(declaration) list(instruction) RCBR 
                                    instruction list(instruction) 
                                    expression SEMICOLON 
                                    (?)

** In state 41, looking ahead at CONCATE, reducing production
** expression -> expression TIMES expression
** is permitted because of the following sub-derivation:

expression CONCATE expression // lookahead token appears
expression TIMES expression . 

** In state 41, looking ahead at CONCATE, shifting is permitted
** because of the following sub-derivation:

expression TIMES expression 
                 expression . CONCATE expression 
